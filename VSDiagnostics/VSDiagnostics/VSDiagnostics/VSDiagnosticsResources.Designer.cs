//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VSDiagnostics {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class VSDiagnosticsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VSDiagnosticsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VSDiagnostics.VSDiagnosticsResources", typeof(VSDiagnosticsResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field {0} is used in an ArgumentException as string. Consider using the nameof operator instead..
        /// </summary>
        internal static string ArgumentExceptionWithoutNameofOperatorAnalyzerMessage {
            get {
                return ResourceManager.GetString("ArgumentExceptionWithoutNameofOperatorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suggest using the nameof operator in an ArgumentException..
        /// </summary>
        internal static string ArgumentExceptionWithoutNameofOperatorAnalyzerTitle {
            get {
                return ResourceManager.GetString("ArgumentExceptionWithoutNameofOperatorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use nameof.
        /// </summary>
        internal static string ArgumentExceptionWithoutNameofOperatorCodeFixTitle {
            get {
                return ResourceManager.GetString("ArgumentExceptionWithoutNameofOperatorCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use cast instead of as..
        /// </summary>
        internal static string AsToCastAnalyzerMessage {
            get {
                return ResourceManager.GetString("AsToCastAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use cast instead of as..
        /// </summary>
        internal static string AsToCastAnalyzerTitle {
            get {
                return ResourceManager.GetString("AsToCastAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use cast instead of as.
        /// </summary>
        internal static string AsToCastCodeFixTitle {
            get {
                return ResourceManager.GetString("AsToCastCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async.
        /// </summary>
        internal static string AsyncCategory {
            get {
                return ResourceManager.GetString("AsyncCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &quot;{0}&quot; does not end with &apos;Async&apos;..
        /// </summary>
        internal static string AsyncMethodWithoutAsyncSuffixAnalyzerMessage {
            get {
                return ResourceManager.GetString("AsyncMethodWithoutAsyncSuffixAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether an async method has the &apos;Async&apos; suffix..
        /// </summary>
        internal static string AsyncMethodWithoutAsyncSuffixAnalyzerTitle {
            get {
                return ResourceManager.GetString("AsyncMethodWithoutAsyncSuffixAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add suffix.
        /// </summary>
        internal static string AsyncMethodWithoutAsyncSuffixCodeFixTitle {
            get {
                return ResourceManager.GetString("AsyncMethodWithoutAsyncSuffixCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes.
        /// </summary>
        internal static string AttributesCategory {
            get {
                return ResourceManager.GetString("AttributesCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute has empty argument list..
        /// </summary>
        internal static string AttributeWithEmptyArgumentListAnalyzerMessage {
            get {
                return ResourceManager.GetString("AttributeWithEmptyArgumentListAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove empty argument list from attribute..
        /// </summary>
        internal static string AttributeWithEmptyArgumentListAnalyzerTitle {
            get {
                return ResourceManager.GetString("AttributeWithEmptyArgumentListAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Parentheses.
        /// </summary>
        internal static string AttributeWithEmptyArgumentListCodeFixTitle {
            get {
                return ResourceManager.GetString("AttributeWithEmptyArgumentListCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as instead of a cast..
        /// </summary>
        internal static string CastToAsAnalyzerMessage {
            get {
                return ResourceManager.GetString("CastToAsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as instead of a cast..
        /// </summary>
        internal static string CastToAsAnalyzerTitle {
            get {
                return ResourceManager.GetString("CastToAsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as instead of cast.
        /// </summary>
        internal static string CastToAsCodeFixTitle {
            get {
                return ResourceManager.GetString("CastToAsCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A catch clause catches NullReferenceException. Consider using != null or null propagation instead..
        /// </summary>
        internal static string CatchNullReferenceExceptionAnalyzerMessage {
            get {
                return ResourceManager.GetString("CatchNullReferenceExceptionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether no NullReferenceExceptions are caught..
        /// </summary>
        internal static string CatchNullReferenceExceptionAnalyzerTitle {
            get {
                return ResourceManager.GetString("CatchNullReferenceExceptionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A boolean expression can be simplified..
        /// </summary>
        internal static string CompareBooleanToFalseLiteralAnalyzerMessage {
            get {
                return ResourceManager.GetString("CompareBooleanToFalseLiteralAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A boolean expression doesn&apos;t have to be compared to false..
        /// </summary>
        internal static string CompareBooleanToFalseLiteralAnalyzerTitle {
            get {
                return ResourceManager.GetString("CompareBooleanToFalseLiteralAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simplify expression.
        /// </summary>
        internal static string CompareBooleanToFalseLiteralCodeFixTitle {
            get {
                return ResourceManager.GetString("CompareBooleanToFalseLiteralCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A boolean expression can be simplified..
        /// </summary>
        internal static string CompareBooleanToTrueLiteralAnalyzerMessage {
            get {
                return ResourceManager.GetString("CompareBooleanToTrueLiteralAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A boolean expression doesn&apos;t have to be compared to true..
        /// </summary>
        internal static string CompareBooleanToTrueLiteralAnalyzerTitle {
            get {
                return ResourceManager.GetString("CompareBooleanToTrueLiteralAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simplify expression.
        /// </summary>
        internal static string CompareBooleanToTrueLiteralCodeFixTitle {
            get {
                return ResourceManager.GetString("CompareBooleanToTrueLiteralCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A conditional operator can be omitted..
        /// </summary>
        internal static string ConditionalOperatorReturnsDefaultOptionsAnalyzerMessage {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsDefaultOptionsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The conditional operator shouldn&apos;t return redundant true and false literals..
        /// </summary>
        internal static string ConditionalOperatorReturnsDefaultOptionsAnalyzerTitle {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsDefaultOptionsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove conditional.
        /// </summary>
        internal static string ConditionalOperatorReturnsDefaultOptionsCodeFixTitle {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsDefaultOptionsCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A conditional operator can be omitted..
        /// </summary>
        internal static string ConditionalOperatorReturnsInvertedDefaultOptionsAnalyzerMessage {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsInvertedDefaultOptionsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The conditional operator shouldn&apos;t return redundant true and false literals..
        /// </summary>
        internal static string ConditionalOperatorReturnsInvertedDefaultOptionsAnalyzerTitle {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsInvertedDefaultOptionsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove conditional.
        /// </summary>
        internal static string ConditionalOperatorReturnsInvertedDefaultOptionsCodeFixTitle {
            get {
                return ResourceManager.GetString("ConditionalOperatorReturnsInvertedDefaultOptionsCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition is always false..
        /// </summary>
        internal static string ConditionIsAlwaysFalseAnalyzerMessage {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysFalseAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition is always false..
        /// </summary>
        internal static string ConditionIsAlwaysFalseAnalyzerTitle {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysFalseAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove condition and body..
        /// </summary>
        internal static string ConditionIsAlwaysFalseCodeFixTitle {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysFalseCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition is always true..
        /// </summary>
        internal static string ConditionIsAlwaysTrueAnalyzerMessage {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysTrueAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition is always true..
        /// </summary>
        internal static string ConditionIsAlwaysTrueAnalyzerTitle {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysTrueAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove condition..
        /// </summary>
        internal static string ConditionIsAlwaysTrueCodeFixTitle {
            get {
                return ResourceManager.GetString("ConditionIsAlwaysTrueCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ArgumentException is thrown without a message..
        /// </summary>
        internal static string EmptyArgumentExceptionAnalyzerMessage {
            get {
                return ResourceManager.GetString("EmptyArgumentExceptionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether an ArgumentException is thrown with a message..
        /// </summary>
        internal static string EmptyArgumentExceptionAnalyzerTitle {
            get {
                return ResourceManager.GetString("EmptyArgumentExceptionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty catch block detected..
        /// </summary>
        internal static string EmptyCatchClauseAnalyzerMessage {
            get {
                return ResourceManager.GetString("EmptyCatchClauseAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warns when an exception catch block is empty..
        /// </summary>
        internal static string EmptyCatchClauseAnalyzerTitle {
            get {
                return ResourceManager.GetString("EmptyCatchClauseAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum can have Flags attribute..
        /// </summary>
        internal static string EnumCanHaveFlagsAttributeAnalyzerMessage {
            get {
                return ResourceManager.GetString("EnumCanHaveFlagsAttributeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inform that enums can have the Flags attribute..
        /// </summary>
        internal static string EnumCanHaveFlagsAttributeAnalyzerTitle {
            get {
                return ResourceManager.GetString("EnumCanHaveFlagsAttributeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Flags attribute.
        /// </summary>
        internal static string EnumCanHaveFlagsAttributeCodeFixTitle {
            get {
                return ResourceManager.GetString("EnumCanHaveFlagsAttributeCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions.
        /// </summary>
        internal static string ExceptionsCategory {
            get {
                return ResourceManager.GetString("ExceptionsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use explicit {0} modifier..
        /// </summary>
        internal static string ExplicitAccessModifiersAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExplicitAccessModifiersAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use explicit {0} modifier..
        /// </summary>
        internal static string ExplicitAccessModifiersAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExplicitAccessModifiersAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add modifier.
        /// </summary>
        internal static string ExplicitAccessModifiersCodeFixTitle {
            get {
                return ResourceManager.GetString("ExplicitAccessModifiersCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Flags] enum {0} values are not powers of 2.
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoAnalyzerMessage {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Flags] enum values are not powers of 2.
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoAnalyzerTitle {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use powers of 2.
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoCodeFixTitle {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string GeneralCategory {
            get {
                return ResourceManager.GetString("GeneralCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of &quot;goto&quot; detected.  Consider using a method or loop instead..
        /// </summary>
        internal static string GotoDetectionAnalyzerMessage {
            get {
                return ResourceManager.GetString("GotoDetectionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of &quot;goto&quot; detected..
        /// </summary>
        internal static string GotoDetectionAnalyzerTitle {
            get {
                return ResourceManager.GetString("GotoDetectionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An if-statement should be written using braces..
        /// </summary>
        internal static string IfStatementWithoutBracesAnalyzerMessage {
            get {
                return ResourceManager.GetString("IfStatementWithoutBracesAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If blocks should use braces to denote start and end..
        /// </summary>
        internal static string IfStatementWithoutBracesAnalyzerTitle {
            get {
                return ResourceManager.GetString("IfStatementWithoutBracesAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use braces.
        /// </summary>
        internal static string IfStatementWithoutBracesCodeFixTitle {
            get {
                return ResourceManager.GetString("IfStatementWithoutBracesCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A loop-statement should be written using braces..
        /// </summary>
        internal static string LoopStatementWithoutBracesAnalyzerMessage {
            get {
                return ResourceManager.GetString("LoopStatementWithoutBracesAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop blocks should use braces to denote start and end..
        /// </summary>
        internal static string LoopStatementWithoutBracesAnalyzerTitle {
            get {
                return ResourceManager.GetString("LoopStatementWithoutBracesAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use braces.
        /// </summary>
        internal static string LoopStatementWithoutBracesCodeFixTitle {
            get {
                return ResourceManager.GetString("LoopStatementWithoutBracesCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} {1} does not follow naming conventions. Should be {2}..
        /// </summary>
        internal static string NamingConventionsAnalyzerMessage {
            get {
                return ResourceManager.GetString("NamingConventionsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A member does not follow naming conventions..
        /// </summary>
        internal static string NamingConventionsAnalyzerTitle {
            get {
                return ResourceManager.GetString("NamingConventionsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        internal static string NamingConventionsCodeFixTitle {
            get {
                return ResourceManager.GetString("NamingConventionsCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {0} should be turned into a property..
        /// </summary>
        internal static string NonEncapsulatedOrMutableFieldAnalyzerMessage {
            get {
                return ResourceManager.GetString("NonEncapsulatedOrMutableFieldAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal or public fields should be immutable or a property..
        /// </summary>
        internal static string NonEncapsulatedOrMutableFieldAnalyzerTitle {
            get {
                return ResourceManager.GetString("NonEncapsulatedOrMutableFieldAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use property.
        /// </summary>
        internal static string NonEncapsulatedOrMutableFieldCodeFixTitle {
            get {
                return ResourceManager.GetString("NonEncapsulatedOrMutableFieldCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can be written using the shorthand nullable notation..
        /// </summary>
        internal static string NullableToShorthandAnalyzerMessage {
            get {
                return ResourceManager.GetString("NullableToShorthandAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the shorthand T? notation for a nullable type..
        /// </summary>
        internal static string NullableToShorthandAnalyzerTitle {
            get {
                return ResourceManager.GetString("NullableToShorthandAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use shorthand notation.
        /// </summary>
        internal static string NullableToShorthandCodeFixTitle {
            get {
                return ResourceManager.GetString("NullableToShorthandCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give a reason for the Obsolete attribute..
        /// </summary>
        internal static string ObsoleteAttributeWithoutReasonAnalyzerMessage {
            get {
                return ResourceManager.GetString("ObsoleteAttributeWithoutReasonAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Obsolete attribute doesn&apos;t have a reason..
        /// </summary>
        internal static string ObsoleteAttributeWithoutReasonAnalyzerTitle {
            get {
                return ResourceManager.GetString("ObsoleteAttributeWithoutReasonAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the CallerMemberName attribute..
        /// </summary>
        internal static string OnPropertyChangedWithoutCallerMemberNameAnalyzerMessage {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutCallerMemberNameAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the CallerMemberName attribute to automatically pass the property name..
        /// </summary>
        internal static string OnPropertyChangedWithoutCallerMemberNameAnalyzerTitle {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutCallerMemberNameAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add attribute.
        /// </summary>
        internal static string OnPropertyChangedWithoutCallerMemberNameCodeFixTitle {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutCallerMemberNameCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnPropertyChanged({0}) can use the nameof() operator..
        /// </summary>
        internal static string OnPropertyChangedWithoutNameOfOperatorAnalyzerMessage {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutNameOfOperatorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the nameof() operator in conjunection with OnPropertyChanged.
        /// </summary>
        internal static string OnPropertyChangedWithoutNameOfOperatorAnalyzerTitle {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutNameOfOperatorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use nameof.
        /// </summary>
        internal static string OnPropertyChangedWithoutNameOfOperatorCodeFixTitle {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutNameOfOperatorCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test method &quot;{0}&quot; should not end with &quot;Test&quot;..
        /// </summary>
        internal static string RemoveTestSuffixAnalyzerMessage {
            get {
                return ResourceManager.GetString("RemoveTestSuffixAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether a test method ends with &quot;Test&quot;..
        /// </summary>
        internal static string RemoveTestSuffixAnalyzerTitle {
            get {
                return ResourceManager.GetString("RemoveTestSuffixAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove &quot;Test&quot; suffix.
        /// </summary>
        internal static string RemoveTestSuffixCodeFixTitle {
            get {
                return ResourceManager.GetString("RemoveTestSuffixCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty string literal detected..
        /// </summary>
        internal static string ReplaceEmptyStringWithStringDotEmptyAnalyzerMessage {
            get {
                return ResourceManager.GetString("ReplaceEmptyStringWithStringDotEmptyAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces an empty string literal with the more expressive string.Empty..
        /// </summary>
        internal static string ReplaceEmptyStringWithStringDotEmptyAnalyzerTitle {
            get {
                return ResourceManager.GetString("ReplaceEmptyStringWithStringDotEmptyAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use string.Empty.
        /// </summary>
        internal static string ReplaceEmptyStringWithStringDotEmptyCodeFixTitle {
            get {
                return ResourceManager.GetString("ReplaceEmptyStringWithStringDotEmptyCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rethrown exception loses the stacktrace..
        /// </summary>
        internal static string RethrowExceptionWithoutLosingStacktraceAnalyzerMessage {
            get {
                return ResourceManager.GetString("RethrowExceptionWithoutLosingStacktraceAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warns when an exception is rethrown in a way that it loses the stacktrace..
        /// </summary>
        internal static string RethrowExceptionWithoutLosingStacktraceAnalyzerTitle {
            get {
                return ResourceManager.GetString("RethrowExceptionWithoutLosingStacktraceAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove rethrow.
        /// </summary>
        internal static string RethrowExceptionWithoutLosingStacktraceCodeFixTitle {
            get {
                return ResourceManager.GetString("RethrowExceptionWithoutLosingStacktraceCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} can be written using an expression-bodied member.
        /// </summary>
        internal static string SimplifyExpressionBodiedMemberAnalyzerMessage {
            get {
                return ResourceManager.GetString("SimplifyExpressionBodiedMemberAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simplify the expression using an expression-bodied member..
        /// </summary>
        internal static string SimplifyExpressionBodiedMemberAnalyzerTitle {
            get {
                return ResourceManager.GetString("SimplifyExpressionBodiedMemberAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use expression bodied member.
        /// </summary>
        internal static string SimplifyExpressionBodiedMemberCodeFixTitle {
            get {
                return ResourceManager.GetString("SimplifyExpressionBodiedMemberCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;{0}&quot; has a redundant default constructor..
        /// </summary>
        internal static string SingleEmptyConstructorAnalyzerMessage {
            get {
                return ResourceManager.GetString("SingleEmptyConstructorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your constructor is the same as a default constructor and can be removed..
        /// </summary>
        internal static string SingleEmptyConstructorAnalyzerTitle {
            get {
                return ResourceManager.GetString("SingleEmptyConstructorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove empty constructor.
        /// </summary>
        internal static string SingleEmptyConstructorCodeFixTitle {
            get {
                return ResourceManager.GetString("SingleEmptyConstructorCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single catch-all clause has been used..
        /// </summary>
        internal static string SingleGeneralExceptionAnalyzerMessage {
            get {
                return ResourceManager.GetString("SingleGeneralExceptionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether a try-catch block does not contain just a single Exception clause..
        /// </summary>
        internal static string SingleGeneralExceptionAnalyzerTitle {
            get {
                return ResourceManager.GetString("SingleGeneralExceptionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-order placeholders.
        /// </summary>
        internal static string StringPlaceholdersInWrongOrderCodeFixTitle {
            get {
                return ResourceManager.GetString("StringPlaceholdersInWrongOrderCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Placeholders are not in ascending order..
        /// </summary>
        internal static string StringPlaceholdersInWrongOrderMessage {
            get {
                return ResourceManager.GetString("StringPlaceholdersInWrongOrderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orders the arguments of a string.Format() call in ascending order according to index..
        /// </summary>
        internal static string StringPlaceholdersInWrongOrderTitle {
            get {
                return ResourceManager.GetString("StringPlaceholdersInWrongOrderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strings.
        /// </summary>
        internal static string StringsCategory {
            get {
                return ResourceManager.GetString("StringsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs.
        /// </summary>
        internal static string StructsCategory {
            get {
                return ResourceManager.GetString("StructsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warns when a struct replaces the &apos;this&apos; with a new instance, causing the values to be replaced everywhere they are used..
        /// </summary>
        internal static string StructsShouldNotMutateSelfAnalyzerMessage {
            get {
                return ResourceManager.GetString("StructsShouldNotMutateSelfAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A struct should not mutate itself..
        /// </summary>
        internal static string StructsShouldNotMutateSelfAnalyzerTitle {
            get {
                return ResourceManager.GetString("StructsShouldNotMutateSelfAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test method &quot;{0}&quot; is not public..
        /// </summary>
        internal static string TestMethodWithoutPublicModifierAnalyzerMessage {
            get {
                return ResourceManager.GetString("TestMethodWithoutPublicModifierAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether a test method has the public modifier..
        /// </summary>
        internal static string TestMethodWithoutPublicModifierAnalyzerTitle {
            get {
                return ResourceManager.GetString("TestMethodWithoutPublicModifierAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make public.
        /// </summary>
        internal static string TestMethodWithoutPublicModifierCodeFixTitle {
            get {
                return ResourceManager.GetString("TestMethodWithoutPublicModifierCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests.
        /// </summary>
        internal static string TestsCategory {
            get {
                return ResourceManager.GetString("TestsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable {0} can be cast using as/null..
        /// </summary>
        internal static string TryCastWithoutUsingAsNotNullAnalyzerMessage {
            get {
                return ResourceManager.GetString("TryCastWithoutUsingAsNotNullAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The conversion can be performed without casting twice..
        /// </summary>
        internal static string TryCastWithoutUsingAsNotNullAnalyzerTitle {
            get {
                return ResourceManager.GetString("TryCastWithoutUsingAsNotNullAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as.
        /// </summary>
        internal static string TryCastWithoutUsingAsNotNullCodeFixTitle {
            get {
                return ResourceManager.GetString("TryCastWithoutUsingAsNotNullCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual type can be replaced with &apos;var&apos;..
        /// </summary>
        internal static string TypeToVarAnalyzerMessage {
            get {
                return ResourceManager.GetString("TypeToVarAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use var instead of type..
        /// </summary>
        internal static string TypeToVarAnalyzerTitle {
            get {
                return ResourceManager.GetString("TypeToVarAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use var.
        /// </summary>
        internal static string TypeToVarCodeFixTitle {
            get {
                return ResourceManager.GetString("TypeToVarCodeFixTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alias {0} instead of concrete type {1}..
        /// </summary>
        internal static string UseAliasesInsteadOfConcreteTypeAnalyzerMessage {
            get {
                return ResourceManager.GetString("UseAliasesInsteadOfConcreteTypeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alias instead of concrete type..
        /// </summary>
        internal static string UseAliasesInsteadOfConcreteTypeAnalyzerTitle {
            get {
                return ResourceManager.GetString("UseAliasesInsteadOfConcreteTypeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alias.
        /// </summary>
        internal static string UseAliasesInsteadOfConcreteTypeCodeFixTitle {
            get {
                return ResourceManager.GetString("UseAliasesInsteadOfConcreteTypeCodeFixTitle", resourceCulture);
            }
        }
    }
}
